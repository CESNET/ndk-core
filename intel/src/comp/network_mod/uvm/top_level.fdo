# top_level.fdo: Top Level Function simulation file
# Copyright (C) 2023 CESNET z. s. p. o.
# Author(s): Radek IÅ¡a <isa@cesnet.cz>

# SPDX-License-Identifier: BSD-3-Clause

# SET Important paths
set OFM_PATH         "../../../../../../ofm/"
set FIRMWARE_BASE    $OFM_PATH

set DUT_BASE              ".."
set DUT_UVM_BASE          "."

set TB_FILE               "./tbench/testbench.sv"
set SIG_FILE              "./signals_sig.fdo"

# PARSE PARAMETERS
if {[info exists env(CORE_PARAMS)]} {
    foreach P $env(CORE_PARAMS) {
        lassign [split $P "="] PARAM_NAME PARAM_VALUE
        lappend PARAM_LIST $PARAM_NAME $PARAM_VALUE
    }
    array set PARAMS $PARAM_LIST
}

# Disable Code Coverage
set SIM_FLAGS(CODE_COVERAGE) false
set SIM_FLAGS(UVM_ENABLE) true
if {[info exists PARAMS(UVM_TEST)]} {
    set SIM_FLAGS(UVM_TEST) $PARAMS(UVM_TEST)
} else {
    set SIM_FLAGS(UVM_TEST) "test::base"
}
set SIM_FLAGS(UVM_VERBOSITY) "UVM_NONE"
# Because checking array index is beffore constant propagation
set SIM_FLAGS(DEBUG) true
#set SIM_FLAGS(RAND_SEED) 3304987736
set SIM_FLAGS(RAND_SEED) 2201292564

if {[info exists PARAMS(NETWORK_ARCH)]} {
    set NETWORK_ARCH $PARAMS(NETWORK_ARCH)
} else {
    set NETWORK_ARCH "E_TILE"
}

# SET COMPONENT
set COMPONENTS [list \
    [list "DUT"      $DUT_BASE       $NETWORK_ARCH]\
    [list "DUT_UVM"  $DUT_UVM_BASE   "FULL"]\
]

# Global include file for compilation
source "$OFM_PATH/build/Modelsim.inc.fdo"

# Suppress warnings from std_arith library
puts "Std_arith Warnings - Disabled"
set StdArithNoWarnings 1
# Suppress warnings from numeric_std library
puts "Numeric_std Warnings - Disabled"
set NumericStdNoWarnings 1

nb_sim_run

# Reports
if {$SIM_FLAGS(CODE_COVERAGE)} {
    coverage save -instance /testbench/DUT_U -assert -directive -cvg -code bcefst -verbose actual.ucdb
    vcover merge final.ucdb final.ucdb actual.ucdb
}


